// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Employee {
    id                    String           @id @default(auto()) @map("_id") @db.ObjectId
    createdAt             DateTime         @default(now())
    email                 String           @unique
    firstName             String
    lastName              String
    password              String?
    address               String?
    role                  Role             @default(USER)
    jobTitle              String
    department            Department?      @relation(fields: [departmentId], references: [id])
    departmentId          String?          @db.ObjectId
    assignedOthersHistory ChangesHistory[] @relation(name: "AssignorEmployee")
    assignedByHistory     ChangesHistory[] @relation(name: "AssigneeEmployee")
}

model Department {
    id                                String           @id @default(auto()) @map("_id") @db.ObjectId
    createdAt                         DateTime         @default(now())
    name                              String
    employeeCount                     Int              @default(0)
    employee                          Employee[]
    previousEmployeeDepartmentHistory ChangesHistory[] @relation(name: "PreviousDepartment")
    currentEmployeeDepartmentHistory  ChangesHistory[] @relation(name: "CurrentDepartment")
}

model ChangesHistory {
    id                   String      @id @default(auto()) @map("_id") @db.ObjectId
    changedAt            DateTime    @default(now())
    assignor             Employee    @relation(name: "AssignorEmployee", fields: [assignorId], references: [id])
    assignorId           String      @db.ObjectId
    assignee             Employee    @relation(name: "AssigneeEmployee", fields: [assigneeId], references: [id])
    assigneeId           String      @db.ObjectId
    previousDepartment   Department? @relation(name: "PreviousDepartment", fields: [previousDepartmentId], references: [id])
    previousDepartmentId String?     @db.ObjectId
    currentDepartment    Department? @relation(name: "CurrentDepartment", fields: [currentDepartmentId], references: [id])
    currentDepartmentId  String?     @db.ObjectId
}

enum Role {
    ADMIN
    USER
}
